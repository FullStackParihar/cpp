// initialize an integer array of size 10 where even indices store 0 and odd indices store 1
int arr4[10];
for (int i = 0; i < 10; ++i) {
    arr4[i] = (i % 2 == 0) ? 0 : 1;
}

// create an array of size 5 and initialize it with {50, 40, 30, 20, 10} using a loop
int arr5[5];
for (int i = 0; i < 5; ++i) {
    arr5[i] = 50 - i * 10;
}

// initialize a character array with the word "VECTOR" and print each character in reverse order
char word[] = "VECTOR";
for (int i = 5; i >= 0; --i) {
    cout << word[i];
}
cout << endl;

// given an array {10, 20, 30, 40, 50, 60}, create a new array that copies only the elements at odd indices
int original[] = {10, 20, 30, 40, 50, 60};
int odd_index_elements[3];
for (int i = 0, j = 0; i < 6; ++i) {
    if (i % 2 != 0) {
        odd_index_elements[j++] = original[i];
    }
}

// create a vector of size n (user input) and initialize it such that the value at each index is i*i - 3
int main_vector_custom() {
    int n;
    cout << "Enter vector size: ";
    cin >> n;
    vector<int> vec(n);
    for (int i = 0; i < n; ++i) {
        vec[i] = i * i - 3;
    }
    for (int i = 0; i < n; ++i) {
        cout << vec[i] << " ";
    }
    return 0;
}

// create a vector of size 5, initialize it with values {10, 20, 30, 40, 50}, then resize it to 3 elements
int main_resize() {
    vector<int> vec = {10, 20, 30, 40, 50};
    vec.resize(3);
    for (int i = 0; i < vec.size(); ++i) {
        cout << vec[i] << " ";
    }
    return 0;
}

// create a vector with elements {10, 20, 30, 40}. Insert 25 between 20 and 30 using the insert method
int main_insert() {
    vector<int> vec = {10, 20, 30, 40};
    vec.insert(vec.begin() + 2, 25);
    for (int i = 0; i < vec.size(); ++i) {
        cout << vec[i] << " ";
    }
    return 0;
}

// create a vector {1, 2, 3, 4, 5, 6} and remove all even numbers using the erase method
int main_remove_even() {
    vector<int> vec = {1, 2, 3, 4, 5, 6};
    for (auto it = vec.begin(); it != vec.end(); ) {
        if (*it % 2 == 0) {
            it = vec.erase(it);
        } else {
            ++it;
        }
    }
    for (int i = 0; i < vec.size(); ++i) {
        cout << vec[i] << " ";
    }
    return 0;
}

// given a vector {10, 20, 30, 20, 10}, find the first occurrence of the element 20 and remove it
int main_remove_first_occurrence() {
    vector<int> vec = {10, 20, 30, 20, 10};
    auto it = find(vec.begin(), vec.end(), 20);
    if (it != vec.end()) {
        vec.erase(it);
    }
    for (int i = 0; i < vec.size(); ++i) {
        cout << vec[i] << " ";
    }
    return 0;
}
